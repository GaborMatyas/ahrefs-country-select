// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Button from "./Button.bs.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as UseCountriesHook from "../hooks/UseCountriesHook.bs.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function CountrySelect(props) {
  var onChange = props.onChange;
  var country = props.country;
  var result = UseCountriesHook.useCountries(undefined);
  var handleCountryChange = function (e) {
    var newCountry = e.target.value;
    Curry._1(onChange, newCountry);
    console.log(" ~ file: CountrySelect.res:18 ~ handleCountryChange ~ newCountry:\", " + newCountry + "");
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(Button.make, {
                      children: Caml_option.some("" + country + "")
                    }),
                JsxRuntime.jsxs("select", {
                      children: [
                        JsxRuntime.jsx("option", {
                              children: "Search",
                              hidden: true,
                              disabled: true,
                              value: "search"
                            }),
                        typeof result === "number" ? (
                            result !== 0 ? null : "Loading..."
                          ) : JsxRuntime.jsx(JsxRuntime.Fragment, {
                                children: Belt_Array.mapWithIndex(result._0, (function (i, country) {
                                        return JsxRuntime.jsx("option", {
                                                    children: "" + country.label + "",
                                                    value: country.value
                                                  }, "" + country.value + "-" + String(i) + "");
                                      }))
                              })
                      ],
                      value: country,
                      onChange: handleCountryChange
                    })
              ],
              className: props.className
            });
}

var make = CountrySelect;

export {
  make ,
}
/* Button Not a pure module */
