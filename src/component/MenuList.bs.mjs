// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactWindow from "react-window";
import * as JsxRuntime from "react/jsx-runtime";
import MenuListModuleCss from "./MenuList.module.css";

var styles = MenuListModuleCss;

function getFocusedIndex(rows) {
  return Belt_Option.getWithDefault(Belt_Array.getIndexByU(rows, (function (listItem) {
                    return listItem.props.isFocused;
                  })), 0);
}

function getMenuList(props) {
  var items = React.useMemo((function () {
          return React.Children.toArray(props.children);
        }), [props.children]);
  var focusedIndex = React.useMemo((function () {
          return getFocusedIndex(items);
        }), [items]);
  var listRef = React.useRef(null);
  React.useEffect((function () {
          var list = listRef.current;
          if (!(list == null) && focusedIndex >= 0) {
            list.scrollToItem(focusedIndex, "smart");
          }
          
        }), [
        focusedIndex,
        items,
        listRef
      ]);
  return JsxRuntime.jsx(ReactWindow.VariableSizeList, {
              children: (function (param) {
                  var index = param.index;
                  var elementData = param.data[index];
                  return JsxRuntime.jsx("div", {
                              children: elementData !== undefined ? Caml_option.valFromOption(elementData) : JsxRuntime.jsx(JsxRuntime.Fragment, {}),
                              style: param.style
                            }, String(index));
                }),
              className: styles["no-scrollbar"],
              estimatedItemSize: 26,
              height: 364,
              initialScrollOffset: 0,
              innerElementType: (function (props) {
                  return JsxRuntime.jsx("div", {
                              children: props.children
                            });
                }),
              itemCount: items.length,
              itemData: items,
              itemSize: (function (param) {
                  return 26;
                }),
              overscanCount: 3,
              ref: Caml_option.some(listRef),
              width: "100%"
            });
}

var defaultItemHeight = 26;

var renderedElementCountOutsideVisibleArea = 3;

export {
  styles ,
  defaultItemHeight ,
  renderedElementCountOutsideVisibleArea ,
  getFocusedIndex ,
  getMenuList ,
}
/* styles Not a pure module */
